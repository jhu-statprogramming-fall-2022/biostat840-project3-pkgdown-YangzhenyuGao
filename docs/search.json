[{"path":"/articles/my-vignette.html","id":"normtest-this-is-an-r-package-that-tests-your-data-for-normality","dir":"Articles","previous_headings":"","what":"noRmtest: This is an R package that tests your data for normality!","title":"Normality Testing in R","text":"common important assumption made many (commonly used) parametric statistical methods (t-tests, ANOVA linear regression) dependent variable (response variable) normally distributed across categories independent variables (predictors). Thus testing normality data important step applying parametric statistical methods. Graphical statistical methods can used test whether sample data drawn normal population. normality testing important remember null hypothesis sample data different normal population mean variance. fail reject null hypothesis - meaning resultant p-value > 0.05 - able apply appropriate parametric statistical methods data. Normality testing can also used check whether sample data approximates normally distributed population. topic can found . noRmtest package tests data normality using graphical statistical method multiple variables . graphical method, quantile-quantile plots (Q-Q plot) constructed order visualize whether data closely approximates straight line - thereby indicating normally distributed. statistical method, Shapiro-Wilk test score calculated along corresponding p-value. Shapiro-Wilk test provides better power statistical normality tests, long values unique, see information. package also derive parameters fit data normal distribution using maximum likelihood estimation.","code":""},{"path":"/articles/my-vignette.html","id":"package-functions","dir":"Articles","previous_headings":"noRmtest: This is an R package that tests your data for normality!","what":"Package functions:","title":"Normality Testing in R","text":"make_qqplot() description: function read data create QQ-plot continuous variable data. output dictionary plot objects print screen default (user option printing plots). input: dataframe, list, vector, array, matrix output: list plots shapiro_wilk() description: function read data output shapiro-wilks test normality continuous variable data. output tuple lists first list contains test statistics order variables input dataframe second list contains p-values respective ordering. input: dataframe, list, vector, array, matrix first list: test statistic second list: p-value params_mle() description: function read data output mean variance empirical distribution data given data normal continuous variable data. output dataframe one row mean one row variance columns presenting original variables data. input: dataframe, list, vector, array, matrix columns: variables rows: mean, variance","code":""},{"path":"/articles/my-vignette.html","id":"examples","dir":"Articles","previous_headings":"noRmtest: This is an R package that tests your data for normality!","what":"Examples","title":"Normality Testing in R","text":"Consider iris dataset variable Sepal.Length Petal.Length One explorative analysis one might consider dataset QQ-plot. make_qqplot function can simultaneously compute construct QQ-plot multiple variables.   Similarly, shapiro_wilk can provide insight normality quantitatively. normality assumed variables, params_mle can used estimate parameters normal distribution variables sampled .","code":"head(simple_iris) ##   Sepal.Length Petal.Length ## 1          5.1          1.4 ## 2          4.9          1.4 ## 3          4.7          1.3 ## 4          4.6          1.5 ## 5          5.0          1.4 ## 6          5.4          1.7 make_qqplot(simple_iris) ## $Sepal.Length ##  ## $Petal.Length shapiro_wilk(simple_iris) ## $statistic ## Sepal.Length Petal.Length  ##    0.9760903    0.8762681  ##  ## $p.value ## Sepal.Length Petal.Length  ## 1.018116e-02 7.412263e-10 params_mle(simple_iris) ##          Sepal.Length Petal.Length ## Mean        5.8433333     3.758000 ## Variance    0.6811222     3.095503"},{"path":"/articles/my-vignette.html","id":"package-limitations-and-conventions","dir":"Articles","previous_headings":"noRmtest: This is an R package that tests your data for normality!","what":"Package Limitations and Conventions","title":"Normality Testing in R","text":"functions noRmtest takes input datatypes. convention, input datatype dataframe, follow tidy format (see tidyr vignette information). Similar dataframes, variables defined columns matrix. limitation note package limited numeric data, incompatible boolean categorical data (characters factor data).","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Constantin Shuster. Author, maintainer. Sylvia Lee. Author. Richie Zitomer. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shuster C, Lee S, Zitomer R (2022). noRmtest: R package tests data normality!. R package version 0.0.0.9000.","code":"@Manual{,   title = {noRmtest: This is an R package that tests your data for normality!},   author = {Constantin Shuster and Sylvia Lee and Richie Zitomer},   year = {2022},   note = {R package version 0.0.0.9000}, }"},{"path":"/CONDUCT.html","id":"contributor-code-of-conduct","dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"NA","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/ sourced directly tidytext code conduct.","code":""},{"path":[]},{"path":"/CONTRIBUTING.html","id":"adding-changes","dir":"","previous_headings":"","what":"Adding Changes","title":"Contributing","text":"Please feel free send pull request, remember participating project agreeing Code Conduct License.","code":""},{"path":"/CONTRIBUTING.html","id":"git-workflow","dir":"","previous_headings":"Adding Changes","what":"Git Workflow","title":"Contributing","text":"contribute, just fork repo clone locally running: set tracking upstream repo, run: add, commit, push changes first time, run: Submit pull request ’re ready. ’ll make every effort respond within five business days. catch changes remote repo, run:","code":"git clone https://github.com/your-username/noRmtest.git git remote add upstream https://github.com/UBC-MDS/noRmtest git add <files_to_add> git commit -m '[COMMIT MESSAGE]' git push -u origin master git fetch upstream git merge upstream/master git push"},{"path":"/CONTRIBUTING.html","id":"raising-issues","dir":"","previous_headings":"","what":"Raising Issues","title":"Contributing","text":"look issues regularly, feel free add issues repo ’ll respond.","code":""},{"path":"/CONTRIBUTING.html","id":"final-notes","dir":"","previous_headings":"","what":"Final Notes","title":"Contributing","text":"Thanks contributing! Please remember make descriptive commits. Contributing document adapted thoughtbot ptoolkit","code":""},{"path":"/index.html","id":"normtest","dir":"","previous_headings":"","what":"This is an R package that tests your data for normality!","title":"This is an R package that tests your data for normality!","text":"Contributors: Constantin Shuster, Sylvia Lee, Richie Zitomer R package tests data normality!","code":""},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"This is an R package that tests your data for normality!","text":"common important assumption made many (commonly used) parametric statistical methods (t-tests, ANOVA linear regression) dependent variable (response variable) normally distributed across categories independent variables (predictors). Thus testing normality data important step applying parametric statistical methods. Graphical statistical methods can used test whether sample data drawn normal population. normality testing important remember null hypothesis sample data different normal population mean variance. fail reject null hypothesis - meaning resultant p-value > 0.05 - able apply appropriate parametric statistical methods data. Normality testing can also used check whether sample data approximates normally distributed population. topic can found .","code":""},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"This is an R package that tests your data for normality!","text":"package test data normality using graphical statistical method. graphical method, package lets see quantile-quantile plots (Q-Q plot) order visualize whether data closely approximates straight line - thereby indicating normally distributed. statistical method, package lets calculate Shapiro-Wilk test score along corresponding p-value. Shapiro-Wilk test provides better power statistical normality tests, long values unique, see information. package also derive parameters fit data normal distribution using maximum likelihood estimation.","code":""},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"This is an R package that tests your data for normality!","text":"","code":"library(noRmtest) data <- c(1,2,3,20) # Very simple example of a very non-normal dataset (params_mle(data)) # Returns a dataframe with the MLE mean and variance if the data was normal (shapiro_wilk(data)) # Returns a list with the Shapiro statistic and the p.value (make_qqplot(data)) # Returns a Q-Q plot to check for normality"},{"path":"/index.html","id":"installation-instructions","dir":"","previous_headings":"","what":"Installation Instructions","title":"This is an R package that tests your data for normality!","text":"order install package, first make sure devtools installed loaded running (R environment): run following command install package: import functions need. package following dependencies: ggplot2 tidyverse nlme","code":"install.packages(\"devtools\", build_vignettes = TRUE) library(devtools) # load devtools devtools::install_github(\"UBC-MDS/noRmtest\", build_opts = c(\"--no-resave-data\", \"--no-manual\"))"},{"path":"/index.html","id":"package-functions","dir":"","previous_headings":"","what":"Package functions:","title":"This is an R package that tests your data for normality!","text":"description: function read data create QQ-plot continuous variable data. output dictionary plot objects print screen default (user option printing plots). input: dataframe, list, vector, array, matrix output: list plots description: function read data output shapiro-wilks test normality continuous variable data. output tuple lists first list contains test statistics order variables input dataframe second list contains p-values respective ordering. input: dataframe, list, vector, array, matrix first list: test statistic second list: p-value description: function read data output mean variance empirical distribution data given data normal continuous variable data. output dataframe one row mean one row variance columns presenting original variables data. input: dataframe, list, vector, array, matrix columns: variables rows: mean, variance","code":""},{"path":"/index.html","id":"branch-coverage","dir":"","previous_headings":"","what":"Branch Coverage","title":"This is an R package that tests your data for normality!","text":"tests ensure package working expected continue future. can see, close full branch coverage:","code":""},{"path":"/index.html","id":"where-does-this-fit-into-the-r-ecosystem","dir":"","previous_headings":"","what":"Where does this fit into the R ecosystem","title":"This is an R package that tests your data for normality!","text":"stats package R Shaprio-Wilk test function named shapiro.test(). input numeric vector output list containing statistic value p-value. package called ggpubr ggqqplot() input dataframe output ggplot2 object. Interestingly, car package also qqPlot() function can used make Q-Q plot data. Additionally, stats4 package provides mle() performs maximum likelihood estimation. However function may less intuitive requires users define likelihood function. noRmtest designed centralize operations related normality assumption testing parameter estimation. Although functions noRmtest package may acquired elsewhere, package designed eliminate hassle import functions different packages users may may .","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 Constantin Shuster,Sylvia Lee,Richie Zitomer Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/make_qqplot.html","id":null,"dir":"Reference","previous_headings":"","what":"make_qqplot — make_qqplot","title":"make_qqplot — make_qqplot","text":"Create QQ-plot continuous variable data","code":""},{"path":"/reference/make_qqplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make_qqplot — make_qqplot","text":"data, VECTOR, LIST, DATAFRAME, MATRIX, ARRAY data continous variable respective column","code":""},{"path":"/reference/make_qqplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"make_qqplot — make_qqplot","text":"List plots list names column names (index)","code":""},{"path":"/reference/make_qqplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"make_qqplot — make_qqplot","text":"","code":"iris_data <- data.frame(\"length\" = c(1,2,3,4), \"width\" = c(5,6,7,8)) make_qqplot(iris_data) #> $length  #>  #> $width  #>"},{"path":"/reference/params_mle.html","id":null,"dir":"Reference","previous_headings":"","what":"params_mle — params_mle","title":"params_mle — params_mle","text":"Fit data Guassian distribution Maximum Likelihood Estimation (MLE)","code":""},{"path":"/reference/params_mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"params_mle — params_mle","text":"","code":"params_mle(data)"},{"path":"/reference/params_mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"params_mle — params_mle","text":"data, DATAFRAME, ARRAY, LISTS VECTORS data continous variable respective column/list","code":""},{"path":"/reference/params_mle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"params_mle — params_mle","text":"DATAFRAME first row contains estimated means second row contains estimated variance, columns present original variables data","code":""},{"path":"/reference/params_mle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"params_mle — params_mle","text":"","code":"iris_data <- data.frame(\"length\" = c(1,2,3,4), \"width\" = c(5,6,7,8)) params_mle(iris_data) #>          length width #> Mean       2.50  6.50 #> Variance   1.25  1.25"},{"path":"/reference/shapiro_wilk.html","id":null,"dir":"Reference","previous_headings":"","what":"shapiro_wilk — shapiro_wilk","title":"shapiro_wilk — shapiro_wilk","text":"Conduct Shapiro-Wilk test every continuous variable data test normality","code":""},{"path":"/reference/shapiro_wilk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"shapiro_wilk — shapiro_wilk","text":"data, VECTOR, LIST, DATAFRAME, MATRIX, ARRAY data continous variable respective column","code":""},{"path":"/reference/shapiro_wilk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"shapiro_wilk — shapiro_wilk","text":"LIST first vector contains test statistics second vector contains p-values. ordered column input.","code":""},{"path":"/reference/shapiro_wilk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"shapiro_wilk — shapiro_wilk","text":"","code":"iris_data <- data.frame(\"length\" = c(1,2,3,4,5,6,7,8), \"width\" = c(9,10,11,12,13,14,15,16)) shapiro_wilk(iris_data) #> $statistic #>    length     width  #> 0.9748583 0.9748583  #>  #> $p.value #>    length     width  #> 0.9833761 0.9833761  #>"}]
